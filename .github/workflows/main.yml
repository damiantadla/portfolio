name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Uruchamiaj pipeline po pushu do gałęzi 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Klonuje repozytorium

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Użyj Node.js w wersji 20

      - name: List directory contents
        run: ls -al frontend  # Wyświetl zawartość katalogu 'frontend' jako debugowanie

      - name: Install dependencies
        run: |
          ls 
          cd frontend/portfolio  # Przejdź do katalogu, gdzie znajduje się package.json
          ls -al  # Wyświetl zawartość katalogu, aby upewnić się, że package.json jest w tym miejscu
          npm install  # Instalacja zależności

  deploy:
    needs: build  # Upewnij się, że etap budowy zakończył się pomyślnie
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to VPS
        uses: appleboy/scp-action@v0.1.4  # Możesz użyć akcji SCP do skopiowania plików na VPS
        with:
          host: ${{ secrets.VPS_IP }}  # Adres IP serwera VPS
          username: ${{ secrets.VPS_USER }}  # Użytkownik na VPS
          key: ${{ secrets.VPS_PRIVATE_KEY }}  # Klucz prywatny SSH
          port: 22
          source: "frontend"  # Przesyłaj tylko folder frontend
          target: "/home/ftpuser/var/www/portfolio/frontend"  # Ścieżka docelowa na VPS

      - name: Execute deployment script
        uses: appleboy/ssh-action@v0.1.4  # Wykonaj skrypt na VPS
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ftpuser/var/www/portfolio/frontend  # Przejdź do katalogu aplikacji
            npm install --production  # Zainstaluj zależności produkcyjne
            pm2 restart app  # Uruchom aplikację na nowo (przy założeniu, że używasz PM2)
